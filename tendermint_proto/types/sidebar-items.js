initSidebarItems({"enum":[["BlockIdFlag","BlockIdFlag indicates which BlcokID the signature is for"],["SignedMsgType","SignedMsgType is a type of signed message in the consensus."]],"mod":[["evidence","Nested message and enum types in `Evidence`."]],"struct":[["Block",""],["BlockId","BlockID"],["BlockMeta",""],["BlockParams","BlockParams contains limits on the block size."],["CanonicalBlockId",""],["CanonicalPartSetHeader",""],["CanonicalProposal",""],["CanonicalVote",""],["Commit","Commit contains the evidence that a block was committed by a set of validators."],["CommitSig","CommitSig is a part of the Vote included in a Commit."],["ConsensusParams","ConsensusParams contains consensus critical parameters that determine the validity of blocks."],["Data","Data contains the set of transactions included in the block"],["DuplicateVoteEvidence","DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes."],["EventDataRoundState",""],["Evidence",""],["EvidenceList",""],["EvidenceParams","EvidenceParams determine how we handle evidence of malfeasance."],["HashedParams","HashedParams is a subset of ConsensusParams."],["Header","Header defines the structure of a Tendermint block header."],["LightBlock",""],["LightClientAttackEvidence","LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client."],["Part",""],["PartSetHeader","PartsetHeader"],["Proposal",""],["SignedHeader",""],["SimpleValidator",""],["TxProof","TxProof represents a Merkle proof of the presence of a transaction in the Merkle tree."],["Validator",""],["ValidatorParams","ValidatorParams restrict the public key types validators can use. NOTE: uses ABCI pubkey naming, not Amino names."],["ValidatorSet",""],["VersionParams","VersionParams contains the ABCI application version."],["Vote","Vote represents a prevote, precommit, or commit vote from validators for consensus."]]});