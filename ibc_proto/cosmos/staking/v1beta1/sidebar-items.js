window.SIDEBAR_ITEMS = {"enum":[["AuthorizationType","AuthorizationType defines the type of staking module authorization type"],["BondStatus","BondStatus is the status of a validator."],["InfractionType","InfractionType indicates the infraction type a validator commited."]],"mod":[["msg_client","Generated client implementations."],["query_client","Generated client implementations."],["stake_authorization","Nested message and enum types in `StakeAuthorization`."]],"struct":[["Commission","Commission defines commission parameters for a given validator."],["CommissionRates","CommissionRates defines the initial commission rates to be used for creating a validator."],["Delegation","Delegation represents the bond with tokens held by an account. It is owned by one delegator, and is associated with the voting power of one validator."],["DelegationResponse","DelegationResponse is equivalent to Delegation except that it contains a balance in addition to shares which is more suitable for client responses."],["Description","Description defines a validator description."],["DvPair","DVPair is struct that just has a delegator-validator pair with no other data. It is intended to be used as a marshalable pointer. For example, a DVPair can be used to construct the key to getting an UnbondingDelegation from state."],["DvPairs","DVPairs defines an array of DVPair objects."],["DvvTriplet","DVVTriplet is struct that just has a delegator-validator-validator triplet with no other data. It is intended to be used as a marshalable pointer. For example, a DVVTriplet can be used to construct the key to getting a Redelegation from state."],["DvvTriplets","DVVTriplets defines an array of DVVTriplet objects."],["GenesisState","GenesisState defines the staking module’s genesis state."],["HistoricalInfo","HistoricalInfo contains header and validator information for a given block. It is stored as part of staking module’s state, which persists the `n` most recent HistoricalInfo (`n` is set by the staking module’s `historical_entries` parameter)."],["LastValidatorPower","LastValidatorPower required for validator set update logic."],["MsgBeginRedelegate","MsgBeginRedelegate defines a SDK message for performing a redelegation of coins from a delegator and source validator to a destination validator."],["MsgBeginRedelegateResponse","MsgBeginRedelegateResponse defines the Msg/BeginRedelegate response type."],["MsgCancelUnbondingDelegation","MsgCancelUnbondingDelegation defines the SDK message for performing a cancel unbonding delegation for delegator"],["MsgCancelUnbondingDelegationResponse","MsgCancelUnbondingDelegationResponse"],["MsgCreateValidator","MsgCreateValidator defines a SDK message for creating a new validator."],["MsgCreateValidatorResponse","MsgCreateValidatorResponse defines the Msg/CreateValidator response type."],["MsgDelegate","MsgDelegate defines a SDK message for performing a delegation of coins from a delegator to a validator."],["MsgDelegateResponse","MsgDelegateResponse defines the Msg/Delegate response type."],["MsgEditValidator","MsgEditValidator defines a SDK message for editing an existing validator."],["MsgEditValidatorResponse","MsgEditValidatorResponse defines the Msg/EditValidator response type."],["MsgUndelegate","MsgUndelegate defines a SDK message for performing an undelegation from a delegate and a validator."],["MsgUndelegateResponse","MsgUndelegateResponse defines the Msg/Undelegate response type."],["Params","Params defines the parameters for the staking module."],["Pool","Pool is used for tracking bonded and not-bonded token supply of the bond denomination."],["QueryDelegationRequest","QueryDelegationRequest is request type for the Query/Delegation RPC method."],["QueryDelegationResponse","QueryDelegationResponse is response type for the Query/Delegation RPC method."],["QueryDelegatorDelegationsRequest","QueryDelegatorDelegationsRequest is request type for the Query/DelegatorDelegations RPC method."],["QueryDelegatorDelegationsResponse","QueryDelegatorDelegationsResponse is response type for the Query/DelegatorDelegations RPC method."],["QueryDelegatorUnbondingDelegationsRequest","QueryDelegatorUnbondingDelegationsRequest is request type for the Query/DelegatorUnbondingDelegations RPC method."],["QueryDelegatorUnbondingDelegationsResponse","QueryUnbondingDelegatorDelegationsResponse is response type for the Query/UnbondingDelegatorDelegations RPC method."],["QueryDelegatorValidatorRequest","QueryDelegatorValidatorRequest is request type for the Query/DelegatorValidator RPC method."],["QueryDelegatorValidatorResponse","QueryDelegatorValidatorResponse response type for the Query/DelegatorValidator RPC method."],["QueryDelegatorValidatorsRequest","QueryDelegatorValidatorsRequest is request type for the Query/DelegatorValidators RPC method."],["QueryDelegatorValidatorsResponse","QueryDelegatorValidatorsResponse is response type for the Query/DelegatorValidators RPC method."],["QueryHistoricalInfoRequest","QueryHistoricalInfoRequest is request type for the Query/HistoricalInfo RPC method."],["QueryHistoricalInfoResponse","QueryHistoricalInfoResponse is response type for the Query/HistoricalInfo RPC method."],["QueryParamsRequest","QueryParamsRequest is request type for the Query/Params RPC method."],["QueryParamsResponse","QueryParamsResponse is response type for the Query/Params RPC method."],["QueryPoolRequest","QueryPoolRequest is request type for the Query/Pool RPC method."],["QueryPoolResponse","QueryPoolResponse is response type for the Query/Pool RPC method."],["QueryRedelegationsRequest","QueryRedelegationsRequest is request type for the Query/Redelegations RPC method."],["QueryRedelegationsResponse","QueryRedelegationsResponse is response type for the Query/Redelegations RPC method."],["QueryUnbondingDelegationRequest","QueryUnbondingDelegationRequest is request type for the Query/UnbondingDelegation RPC method."],["QueryUnbondingDelegationResponse","QueryDelegationResponse is response type for the Query/UnbondingDelegation RPC method."],["QueryValidatorDelegationsRequest","QueryValidatorDelegationsRequest is request type for the Query/ValidatorDelegations RPC method"],["QueryValidatorDelegationsResponse","QueryValidatorDelegationsResponse is response type for the Query/ValidatorDelegations RPC method"],["QueryValidatorRequest","QueryValidatorRequest is response type for the Query/Validator RPC method"],["QueryValidatorResponse","QueryValidatorResponse is response type for the Query/Validator RPC method"],["QueryValidatorUnbondingDelegationsRequest","QueryValidatorUnbondingDelegationsRequest is required type for the Query/ValidatorUnbondingDelegations RPC method"],["QueryValidatorUnbondingDelegationsResponse","QueryValidatorUnbondingDelegationsResponse is response type for the Query/ValidatorUnbondingDelegations RPC method."],["QueryValidatorsRequest","QueryValidatorsRequest is request type for Query/Validators RPC method."],["QueryValidatorsResponse","QueryValidatorsResponse is response type for the Query/Validators RPC method"],["Redelegation","Redelegation contains the list of a particular delegator’s redelegating bonds from a particular source validator to a particular destination validator."],["RedelegationEntry","RedelegationEntry defines a redelegation object with relevant metadata."],["RedelegationEntryResponse","RedelegationEntryResponse is equivalent to a RedelegationEntry except that it contains a balance in addition to shares which is more suitable for client responses."],["RedelegationResponse","RedelegationResponse is equivalent to a Redelegation except that its entries contain a balance in addition to shares which is more suitable for client responses."],["StakeAuthorization","StakeAuthorization defines authorization for delegate/undelegate/redelegate."],["UnbondingDelegation","UnbondingDelegation stores all of a single delegator’s unbonding bonds for a single validator in an time-ordered list."],["UnbondingDelegationEntry","UnbondingDelegationEntry defines an unbonding object with relevant metadata."],["ValAddresses","ValAddresses defines a repeated set of validator addresses."],["Validator","Validator defines a validator, together with the total amount of the Validator’s bond shares and their exchange rate to coins. Slashing results in a decrease in the exchange rate, allowing correct calculation of future undelegations without iterating over delegators. When coins are delegated to this validator, the validator is credited with a delegation whose number of bond shares is based on the amount of coins delegated divided by the current exchange rate. Voting power can be calculated as total bonded shares multiplied by exchange rate."],["ValidatorUpdates","ValidatorUpdates defines an array of abci.ValidatorUpdate objects."]]};