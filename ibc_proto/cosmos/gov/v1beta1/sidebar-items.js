initSidebarItems({"enum":[["ProposalStatus","ProposalStatus enumerates the valid statuses of a proposal."],["VoteOption","VoteOption enumerates the valid vote options for a given governance proposal."]],"mod":[["msg_client","Generated client implementations."],["query_client","Generated client implementations."]],"struct":[["Deposit","Deposit defines an amount deposited by an account address to an active proposal."],["DepositParams","DepositParams defines the params for deposits on governance proposals."],["GenesisState","GenesisState defines the gov moduleâ€™s genesis state."],["MsgDeposit","MsgDeposit defines a message to submit a deposit to an existing proposal."],["MsgDepositResponse","MsgDepositResponse defines the Msg/Deposit response type."],["MsgSubmitProposal","MsgSubmitProposal defines an sdk.Msg type that supports submitting arbitrary proposal Content."],["MsgSubmitProposalResponse","MsgSubmitProposalResponse defines the Msg/SubmitProposal response type."],["MsgVote","MsgVote defines a message to cast a vote."],["MsgVoteResponse","MsgVoteResponse defines the Msg/Vote response type."],["MsgVoteWeighted","MsgVoteWeighted defines a message to cast a vote."],["MsgVoteWeightedResponse","MsgVoteWeightedResponse defines the Msg/VoteWeighted response type."],["Proposal","Proposal defines the core field members of a governance proposal."],["QueryDepositRequest","QueryDepositRequest is the request type for the Query/Deposit RPC method."],["QueryDepositResponse","QueryDepositResponse is the response type for the Query/Deposit RPC method."],["QueryDepositsRequest","QueryDepositsRequest is the request type for the Query/Deposits RPC method."],["QueryDepositsResponse","QueryDepositsResponse is the response type for the Query/Deposits RPC method."],["QueryParamsRequest","QueryParamsRequest is the request type for the Query/Params RPC method."],["QueryParamsResponse","QueryParamsResponse is the response type for the Query/Params RPC method."],["QueryProposalRequest","QueryProposalRequest is the request type for the Query/Proposal RPC method."],["QueryProposalResponse","QueryProposalResponse is the response type for the Query/Proposal RPC method."],["QueryProposalsRequest","QueryProposalsRequest is the request type for the Query/Proposals RPC method."],["QueryProposalsResponse","QueryProposalsResponse is the response type for the Query/Proposals RPC method."],["QueryTallyResultRequest","QueryTallyResultRequest is the request type for the Query/Tally RPC method."],["QueryTallyResultResponse","QueryTallyResultResponse is the response type for the Query/Tally RPC method."],["QueryVoteRequest","QueryVoteRequest is the request type for the Query/Vote RPC method."],["QueryVoteResponse","QueryVoteResponse is the response type for the Query/Vote RPC method."],["QueryVotesRequest","QueryVotesRequest is the request type for the Query/Votes RPC method."],["QueryVotesResponse","QueryVotesResponse is the response type for the Query/Votes RPC method."],["TallyParams","TallyParams defines the params for tallying votes on governance proposals."],["TallyResult","TallyResult defines a standard tally for a governance proposal."],["TextProposal","TextProposal defines a standard text proposal whose changes need to be manually updated in case of approval."],["Vote","Vote defines a vote on a governance proposal. A Vote consists of a proposal ID, the voter, and the vote option."],["VotingParams","VotingParams defines the params for voting on governance proposals."],["WeightedVoteOption","WeightedVoteOption defines a unit of vote for vote split."]]});