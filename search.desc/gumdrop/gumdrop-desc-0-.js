searchState.loadedDescShard("gumdrop", 0, "Option parser with custom derive support\nProcess all option arguments that appear\nRepresents an error encountered during argument parsing\nFree argument\nLong option, e.g. <code>--option</code>\nLong option with argument, e.g. <code>--option=value</code>\nRepresents an option parsed from a <code>Parser</code>\nImplements a set of options parsed from command line …\nDerives the <code>gumdrop::Options</code> trait for <code>struct</code> and <code>enum</code> …\nParses options from a series of <code>&amp;str</code>-like values.\nControls behavior of free arguments in <code>Parser</code>\nShort option, e.g. <code>-o</code>\nAfter the first “free” argument is encountered, all …\nReturns the subcommand instance, if present.\nReturns a string listing available commands and help text.\nReturns the name of a parsed command, if present.\nReturns a usage string for the named command.\nReturns the default parsing style, <code>AllOptions</code>.\nReturns an error for a failed attempt at parsing an option …\nReturns an error for a failed attempt at parsing an option…\nReturns an error for a failed attempt at parsing an option …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns whether the user supplied a “help” option to …\nReturns an error for an option expecting two or more …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an error for a missing required argument.\nReturns an error for a missing command name.\nReturns an error for a missing required option.\nReturns an error for a missing required command.\nReturns an error for a missing required free argument.\nReturns a new parser for the given series of arguments.\nReturns the next argument to an option or <code>None</code> if none …\nReturns the next option or <code>None</code> if no options remain.\nParses arguments until the given parser is exhausted or …\nParses arguments from the command line.\nParses arguments received from the command line.\nParses arguments from the command line using the default …\nParses arguments received from the command line, using the …\nParses arguments from the environment, using the default …\nParses arguments from the environment, using the default …\nParses arguments from the environment.\nParses arguments from the environment.\nParses options for the named command.\nReturns a listing of available commands and help text.\nReturns a string showing usage and help for this options …\nReturns an error for an option receiving an unexpected …\nReturns an error when a free argument was encountered, but …\nReturns an error for an option expecting two or more …\nReturns an error for an unrecognized command.\nReturns an error for an unrecognized long option, e.g. …\nReturns an error for an unrecognized option.\nReturns an error for an unrecognized short option, e.g. <code>-o</code>.\nReturns a string showing usage and help for each supported …")