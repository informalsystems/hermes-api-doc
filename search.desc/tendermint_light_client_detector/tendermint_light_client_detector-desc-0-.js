searchState.loadedDescShard("tendermint_light_client_detector", 0, "The detector component of the light client detects and …\nThe witness has either not responded, doesn’t have the …\nAn error that arised when comparing a header from the …\nThere may have been an attack on this light client\nA divergence between the primary and a witness that has …\nDuplicate vote evidence\nError type for the light client detector. See <code>ErrorDetail</code> …\nAll the possible error variants.\nEvidence of malfeasance by validators (i.e. signing …\nLightClient attack evidence\nLight client attack evidence\nSome other error has occurred, this is likely a benign …\nA interface over a light client instance and its RPC …\nA trace of the light blocks that were used by the light …\nThe conflicting light block that was returned by the …\nTakes the verified header from the primary and compares it …\nGiven a primary trace and a witness, detect any divergence …\nThe evidence of a misbehaviour that has been gathered from …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHandles the primary style of attack, which is where a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")